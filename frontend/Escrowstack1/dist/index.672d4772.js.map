{"mappings":"AAAA,SAAS,gBAAgB,CAAC,oBAAoB;IAC1C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,cAAc,SAAS,cAAc,CAAC;IAC5C,MAAM,gBAAgB,SAAS,cAAc,CAAC;IAC9C,MAAM,YAAY,SAAS,cAAc,CAAC;IAC1C,MAAM,mBAAmB,SAAS,cAAc,CAAC;IACjD,MAAM,qBAAqB,SAAS,cAAc,CAAC;IACnD,MAAM,sBAAsB,SAAS,cAAc,CAAC;IACpD,MAAM,kBAAkB,SAAS,cAAc,CAAC;IAChD,MAAM,mBAAmB,SAAS,cAAc,CAAC;IAEjD,eAAe;QACb,IAAI;YACF,MAAM,WAAW,MAAM,MAAM;YAC7B,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,wBAAwB;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,6BAA6B;QAC7C;IACF;IAEA,SAAS,wBAAwB,SAAS;QACxC,UAAU,OAAO,CAAC,CAAC;YACjB,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,KAAK,GAAG,QAAQ,EAAE;YACzB,OAAO,IAAI,GAAG,QAAQ,IAAI;YAC1B,cAAc,WAAW,CAAC;QAC5B;IACF;IAEA,cAAc,gBAAgB,CAAC,UAAU;QACvC,MAAM,YAAY,IAAI,CAAC,KAAK;QAC5B,cAAc,SAAS,GAAG;QAC1B,cAAc,QAAQ,GAAG,cAAc;QACvC,YAAY,MAAM,GAAG;QACrB,UAAU,MAAM,GAAG;QAEnB,IAAI,cAAc,IAChB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,oCAAoC,EAAE,UAAU,SAAS,CAAC;YACxF,MAAM,OAAO,MAAM,SAAS,IAAI;YAChC,wBAAwB;QAC1B,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,4BAA4B;QAC5C;IAEJ;IAEA,SAAS,wBAAwB,QAAQ;QACvC,SAAS,OAAO,CAAC,CAAC;YAChB,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,KAAK,GAAG,QAAQ,EAAE;YACzB,OAAO,IAAI,GAAG,QAAQ,IAAI;YAC1B,cAAc,WAAW,CAAC;QAC5B;IACF;IAEA,cAAc,gBAAgB,CAAC,UAAU;QACvC,MAAM,YAAY,IAAI,CAAC,KAAK;QAC5B,YAAY,MAAM,GAAG;QACrB,UAAU,MAAM,GAAG;QAEnB,IAAI,cAAc,IAChB,IAAI;YACF,MAAM,WAAW,MAAM,MAAM,CAAC,mCAAmC,EAAE,UAAU,CAAC;YAC9E,MAAM,UAAU,MAAM,SAAS,IAAI;YACnC,QAAQ,GAAG,CAAC,SAAS,IAAI,IAAG;YAC5B,mBAAmB;QACrB,EAAE,OAAO,OAAO;YACd,QAAQ,KAAK,CAAC,mCAAmC;QACnD;IAEJ;IAEA,SAAS,mBAAmB,OAAO;QACjC,cAAc,WAAW,GAAG,CAAC,SAAE,EAAE,QAAQ,OAAO,CAAC,CAAC;QAClD,cAAc,KAAK,CAAC,KAAK,GAAG;QAC5B,YAAY,MAAM,GAAG;QAErB,iBAAiB,SAAS,GAAG;QAC7B,mBAAmB,SAAS,GAAG;QAC/B,oBAAoB,SAAS,GAAG;QAChC,gBAAgB,SAAS,GAAG;QAC5B,iBAAiB,SAAS,GAAG;QAE7B,QAAQ,YAAY,CAAC,OAAO,CAAC,CAAC;YAC5B,MAAM,UAAU,SAAS,aAAa,CAAC;YACvC,MAAM,OAAO,IAAI,KAAK,YAAY,IAAI;YACtC,MAAM,gBAAgB,KAAK,cAAc,CAAC,SAAS;gBACjD,MAAM;gBACN,OAAO;gBACP,KAAK;gBACL,MAAM;gBACN,QAAQ;gBACR,QAAQ;YACV;YACA,QAAQ,WAAW,GAAG;YACtB,iBAAiB,WAAW,CAAC;YAE7B,MAAM,YAAY,SAAS,aAAa,CAAC;YACzC,UAAU,WAAW,GAAG,CAAC,SAAE,EAAE,YAAY,MAAM,CAAC,CAAC;YACjD,UAAU,KAAK,CAAC,KAAK,GAAG,CAAC,KAAK,CAAC;YAC/B,mBAAmB,WAAW,CAAC;YAE/B,MAAM,aAAa,SAAS,aAAa,CAAC;YAC1C,WAAW,WAAW,GAAG,CAAC,SAAE,EAAE,YAAY,OAAO,CAAC,CAAC;YACnD,oBAAoB,WAAW,CAAC;YAEhC,MAAM,SAAS,SAAS,aAAa,CAAC;YACtC,OAAO,WAAW,GAAG,YAAY,GAAG;YACpC,gBAAgB,WAAW,CAAC;YAE5B,MAAM,UAAU,SAAS,aAAa,CAAC;YACvC,QAAQ,WAAW,GAAG,YAAY,IAAI;YACtC,iBAAiB,WAAW,CAAC;QAC/B;QAEA,UAAU,MAAM,GAAG;IACrB;IAEA;AACF","sources":["script.js"],"sourcesContent":["document.addEventListener('DOMContentLoaded', function () {\r\n    const companySelect = document.getElementById('company-select');\r\n    const accountSelect = document.getElementById('account-select');\r\n    const balanceInfo = document.getElementById('balance-info');\r\n    const balanceAmount = document.getElementById('balance-amount');\r\n    const tableData = document.getElementById('table-data');\r\n    const transactionDates = document.getElementById('transaction-dates');\r\n    const transactionCredits = document.getElementById('transaction-credits');\r\n    const transactionBalances = document.getElementById('transaction-balances');\r\n    const transactionUtrs = document.getElementById('transaction-utrs');\r\n    const transactionAcNos = document.getElementById('transaction-acnos');\r\n  \r\n    async function fetchCompanies() {\r\n      try {\r\n        const response = await fetch('http://localhost:3000/api/companies');\r\n        const data = await response.json();\r\n        populateCompanyDropdown(data);\r\n      } catch (error) {\r\n        console.error('Error fetching companies:', error);\r\n      }\r\n    }\r\n  \r\n    function populateCompanyDropdown(companies) {\r\n      companies.forEach((company) => {\r\n        const option = document.createElement('option');\r\n        option.value = company.id;\r\n        option.text = company.name;\r\n        companySelect.appendChild(option);\r\n      });\r\n    }\r\n  \r\n    companySelect.addEventListener('change', async function () {\r\n      const companyId = this.value;\r\n      accountSelect.innerHTML = '<option value=\"\">Select Account</option>';\r\n      accountSelect.disabled = companyId === '';\r\n      balanceInfo.hidden = true;\r\n      tableData.hidden = true;\r\n  \r\n      if (companyId !== '') {\r\n        try {\r\n          const response = await fetch(`http://localhost:3000/api/companies/${companyId}/accounts`);\r\n          const data = await response.json();\r\n          populateAccountDropdown(data);\r\n        } catch (error) {\r\n          console.error('Error fetching accounts:', error);\r\n        }\r\n      }\r\n    });\r\n  \r\n    function populateAccountDropdown(accounts) {\r\n      accounts.forEach((account) => {\r\n        const option = document.createElement('option');\r\n        option.value = account.id;\r\n        option.text = account.name;\r\n        accountSelect.appendChild(option);\r\n      });\r\n    }\r\n  \r\n    accountSelect.addEventListener('change', async function () {\r\n      const accountId = this.value;\r\n      balanceInfo.hidden = true;\r\n      tableData.hidden = true;\r\n  \r\n      if (accountId !== '') {\r\n        try {\r\n          const response = await fetch(`http://localhost:3000/api/accounts/${accountId}`);\r\n          const account = await response.json();\r\n          console.log(response.json(),\"response.json()\");\r\n          displayAccountInfo(account);\r\n        } catch (error) {\r\n          console.error('Error fetching account details:', error);\r\n        }\r\n      }\r\n    });\r\n  \r\n    function displayAccountInfo(account) {\r\n      balanceAmount.textContent = `₹ ${account.balance}`;\r\n      balanceAmount.style.color = 'green';\r\n      balanceInfo.hidden = false;\r\n    \r\n      transactionDates.innerHTML = '';\r\n      transactionCredits.innerHTML = '';\r\n      transactionBalances.innerHTML = '';\r\n      transactionUtrs.innerHTML = '';\r\n      transactionAcNos.innerHTML = '';\r\n    \r\n      account.transactions.forEach((transaction) => {\r\n        const dateDiv = document.createElement('div');\r\n        const date = new Date(transaction.date);\r\n        const formattedDate = date.toLocaleString('en-US', {\r\n          year: 'numeric',\r\n          month: '2-digit',\r\n          day: '2-digit',\r\n          hour: '2-digit',\r\n          minute: '2-digit',\r\n          hour12: true\r\n        });\r\n        dateDiv.textContent = formattedDate;\r\n        transactionDates.appendChild(dateDiv);\r\n    \r\n        const creditDiv = document.createElement('div');\r\n        creditDiv.textContent = `₹ ${transaction.credit}`;\r\n        creditDiv.style.color = `green`;\r\n        transactionCredits.appendChild(creditDiv);\r\n    \r\n        const balanceDiv = document.createElement('div');\r\n        balanceDiv.textContent = `₹ ${transaction.balance}`;\r\n        transactionBalances.appendChild(balanceDiv);\r\n    \r\n        const utrDiv = document.createElement('div');\r\n        utrDiv.textContent = transaction.utr;\r\n        transactionUtrs.appendChild(utrDiv);\r\n    \r\n        const acNoDiv = document.createElement('div');\r\n        acNoDiv.textContent = transaction.acNo;\r\n        transactionAcNos.appendChild(acNoDiv);\r\n      });\r\n    \r\n      tableData.hidden = false;\r\n    }\r\n    \r\n    fetchCompanies();\r\n  });\r\n  "],"names":[],"version":3,"file":"index.672d4772.js.map","sourceRoot":"/__parcel_source_root/"}